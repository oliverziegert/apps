name: gitea
services:
  postgres:
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    user: "999:999"
    image: docker.io/library/postgres:17.6-alpine3.22
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      interval: 10s
      retries: 30
      start_period: 10s
      test: pg_isready -h 127.0.0.1 -p 5432 -U $$POSTGRES_USER -d $$POSTGRES_DB
      timeout: 5s
    volumes:
      - type: bind
        source: ${VOLUME_DB_SRC}
        target: ${VOLUME_DB_DST}
        read_only: false
    networks:
      - gitea

  gitea:
    user: 1000:1000
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    image: gitea/gitea:1.25.0-rootless
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      interval: 10s
      retries: 30
      start_period: 10s
      test: "curl --silent --output /dev/null --show-error --fail  http://127.0.0.1:3000/api/healthz"
      timeout: 5s
    environment:
      TZ: Europe/Berlin
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: postgres
      GITEA__database__NAME: ${POSTGRES_DB}
      GITEA__database__PASSWD: ${POSTGRES_PASSWORD}
      GITEA__database__USER: ${POSTGRES_USER}
      GITEA__server__ROOT_URL: ${ROOT_URL}
    volumes:
      - type: bind
        source: ${VOLUME_CONFIG_SRC}
        target: ${VOLUME_CONFIG_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_DATA_SRC}
        target: ${VOLUME_DATA_DST}
        read_only: false
    networks:
      - gitea
      - reverse-proxy

networks:
  gitea:
  reverse-proxy:
    external: true
    name: reverse-proxy