name: nextcloud
configs:
  remoteip.conf:
    content: |- 
      RemoteIPHeader X-Real-Ip
      RemoteIPInternalProxy 172.17.0.0/12
      RemoteIPInternalProxy fe80::/10
  limitrequestbody.conf:
    content: LimitRequestBody 17179869184
  opcache.ini:
    content: opcache.memory_consumption=2048
  php.ini:
    content: max_execution_time=30
  valkey.conf:
    content: requirepass "${VALKEY_PASSWORD}"
services:
  db:
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    user: "999:999"
    image: docker.io/library/postgres:18.0-alpine3.22
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    healthcheck:
      test: 
        - CMD-SHELL
        - pg_isready -d `cat $$POSTGRES_DB_FILE` -U `cat $$POSTGRES_USER_FILE`
      start_period: 15s
      interval: 30s
      retries: 3
      timeout: 5s
    volumes:
      - type: bind
        source: ${VOLUME_DB_SRC}
        target: ${VOLUME_DB_DST}
        read_only: false
    secrets:
      - source: postgres_db
        target: postgres_db
      - source: postgres_user
        target: postgres_user
      - source: postgres_password
        target: postgres_password
    networks:
      - nextcloud

  valkey:
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    configs:
      - source: valkey.conf
        target: /etc/valkey/valkey.conf
    user: "568:568"
    image: docker.io/valkey/valkey:8.1.1-alpine3.21
    command: 
      - valkey-server
      - /etc/valkey/valkey.conf
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
      ALLOW_EMPTY_PASSWORD: 'no'
      VALKEY_PASSWORD: "${VALKEY_PASSWORD}"
    volumes:
      - type: bind
        source: ${VOLUME_VALKEY_SRC}
        target: ${VOLUME_VALKEY_DST}
        read_only: false
    healthcheck:
      interval: 10s
      retries: 30
      start_period: 10s
      test: "valkey-cli -h 127.0.0.1 -p 6379 -a $$VALKEY_PASSWORD ping | grep -q PONG"
    networks:
      - nextcloud

  imaginary:
    cap_drop:
      - ALL
    cap_add:
      - SYS_NICE
    security_opt:
      - no-new-privileges
    user: 568:568
    image: docker.io/nextcloud/aio-imaginary:20241106_101604
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
      IMAGINARY_SECRET: ${IMAGINARY_SECRET}
    tmpfs:
      - /tmp
    networks:
      - nextcloud

  nextcloud: &nextcloud
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - NET_BIND_SERVICE
      - NET_RAW
      - SETGID
      - SETUID
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    configs:
      - source: remoteip.conf
        target: /etc/apache2/conf-available/remoteip.conf
      - source: limitrequestbody.conf
        target: /etc/apache2/conf-enabled/limitrequestbody.conf
      - source: opcache.ini
        target: /usr/local/etc/php/conf.d/opcache-z-99.ini
      - source: php.ini
        target: /usr/local/etc/php/conf.d/nextcloud-z-99.ini
    image: docker.io/library/nextcloud:32.0.0
    depends_on:
      db:
        condition: service_healthy
      valkey:
        condition: service_healthy
      imaginary:
        condition: service_healthy
    environment:
      TZ: Europe/Berlin
      PHP_MEMORY_LIMIT: 4G
      PHP_UPLOAD_LIMIT: 16G
      REDIS_HOST: valkey
      REDIS_HOST_PASSWORD: ${VALKEY_PASSWORD}
      REDIS_HOST_PORT: "6379"
      NEXTCLOUD_FQDN: ${DOMAIN}
      NEXTCLOUD_TRUSTED_DOMAINS: ${DOMAIN}
      OVERWRITEHOST: ${DOMAIN}
      overwrite.cli.url: https://${DOMAIN}
      OVERWRITEPROTOCOL: https
      TRUSTED_PROXIES: ${TRUSTED_PROXIES}
      POSTGRES_HOST: db
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      NEXTCLOUD_ADMIN_USER_FILE: /run/secrets/nextcloud_admin_user
      NEXTCLOUD_ADMIN_PASSWORD_FILE: /run/secrets/nextcloud_admin_password
      NEXTCLOUD_DATA_DIR: /var/www/html/data
    healthcheck:
      interval: 10s
      retries: 30
      start_period: 10s
      test: 'curl --silent --output /dev/null --show-error --fail --header "Host: ${DOMAIN}" http://127.0.0.1:80/status.php'
    secrets:
      - source: postgres_db
        target: postgres_db
      - source: postgres_user
        target: postgres_user
      - source: postgres_password
        target: postgres_password
      - source: nextcloud_admin_user
        target: nextcloud_admin_user
      - source: nextcloud_admin_password
        target: nextcloud_admin_password
    volumes:
      - type: bind
        source: ${VOLUME_HTML_SRC}
        target: ${VOLUME_HTML_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_APPS_SRC}
        target: ${VOLUME_APPS_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_DATA_SRC}
        target: ${VOLUME_DATA_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_CONFIG_SRC}
        target: ${VOLUME_CONFIG_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_CONFIG_SRC}
        target: ${VOLUME_CONFIG_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_REDIS_SESSION_SRC}
        target: ${VOLUME_REDIS_SESSION_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_THEMES_SRC}
        target: ${VOLUME_THEMES_DST}
        read_only: false
    restart: unless-stopped
    networks:
      - nextcloud
      - reverse-proxy

  cron:
    <<: *nextcloud
    entrypoint: /cron.sh
    healthcheck:
      disable: true

  notify_push:
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - NET_BIND_SERVICE
      - NET_RAW
      - SETGID
      - SETUID
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    image: docker.io/library/nextcloud:32.0.0
    restart: unless-stopped
    user: 33:33
    depends_on:
      nextcloud:
        condition: service_healthy
    environment:
      PORT: 7867
      NEXTCLOUD_URL: http://nextcloud        # don't go through the proxy to contact the nextcloud server
    entrypoint: /var/www/html/custom_apps/notify_push/bin/x86_64/notify_push /var/www/html/config/config.php
    volumes:
      - type: bind
        source: ${VOLUME_APPS_SRC}
        target: ${VOLUME_APPS_DST}
        read_only: false
      - type: bind
        source: ${VOLUME_CONFIG_SRC}
        target: ${VOLUME_CONFIG_DST}
        read_only: false
    networks:
      - nextcloud
      - reverse-proxy

  whiteboard:
    cap_drop:
      - ALL
    cap_add:
      - SYS_NICE
    security_opt:
      - no-new-privileges
    image: ghcr.io/nextcloud-releases/whiteboard:v1.3.0
    restart: unless-stopped
    user: 65534:65534
    environment:
      NEXTCLOUD_URL: https://${DOMAIN}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      STORAGE_STRATEGY: redis
      REDIS_URL: redis://default:${VALKEY_PASSWORD}@valkey:6379/1
    networks:
      - nextcloud
      - reverse-proxy

networks:
  nextcloud: {}
  reverse-proxy:
    external: true
    name: reverse-proxy

secrets:
  nextcloud_admin_user:
    environment: NEXTCLOUD_ADMIN_USER
  nextcloud_admin_password:
    environment: NEXTCLOUD_ADMIN_PASSWORD
  postgres_db:
    environment: POSTGRES_DB
  postgres_user:
    environment: POSTGRES_USER
  postgres_password:
    environment: POSTGRES_PASSWORD
